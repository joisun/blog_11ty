name: Deploy 11ty site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set package manager
        uses: pnpm/action-setup@v4 #optional while package.json.packageManager existed
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Build
        run: pnpm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-site
          path: ./_site
  # Deployment job
  deploy-to-github-page:
    name: Deploy to GitHub Pages
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source    
    # Deploy to the github-pages environment      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: built-site
          path: ./_site
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  deploy-to-personal-server:
    name: Deploy to Personal Server
    runs-on: ubuntu-latest
    environment: github-pages
    needs: build
    steps:
      - name: Download Artifact  # 更新 checkout 步骤
        uses: actions/download-artifact@v3
        with:
          name: built-site
      - name: Test ls
        run: ls -la .
      - name: Deploy to Ali Ecs
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
